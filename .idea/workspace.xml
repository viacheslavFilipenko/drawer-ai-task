<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c472f434-c733-414a-870a-631c01a1ede3" name="Changes" comment="add unit tests for the component">
      <change afterPath="$PROJECT_DIR$/src/components/CanvasWrapper/hooks/useCanvasDrawing.test.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript JSX File" />
        <option value="tsconfig.json" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="GitToolBoxStore">
    <option name="projectConfigVersion" value="5" />
  </component>
  <component name="JsBowerSettings">
    <bower-package value="" />
    <bower.json value="" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2cJB90dw341AhrEGnOadXiPmUey" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SONARLINT_PRECOMMIT_ANALYSIS": "true",
    "WebServerToolWindowFactoryState": "false",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "C:/Users/filip/Documents/drawer-ai-task/node_modules/react-scripts",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "settings.javascript.prettier",
    "ts.external.directory.path": "C:\\Users\\filip\\Documents\\drawer-ai-task\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\filip\Documents\drawer-ai-task\src\components\CanvasWrapper\hooks" />
      <recent name="C:\Users\filip\Documents\drawer-ai-task\src\components\CanvasWrapper" />
      <recent name="C:\Users\filip\Documents\drawer-ai-task\src\common" />
      <recent name="C:\Users\filip\Documents\drawer-ai-task\src\components\CanvasWrapper " />
      <recent name="C:\Users\filip\Documents\drawer-ai-task\src\common\maps" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.useCanvasDrawing Hook">
    <configuration name="CanvasWrapper" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/components/CanvasWrapper/CanvasWrapper.test.tsx" />
      <test-names>
        <test-name value="CanvasWrapper" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="useCanvasDrawing Hook" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/components/CanvasWrapper/hooks/useCanvasDrawing.test.tsx" />
      <test-names>
        <test-name value="useCanvasDrawing Hook" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="useCanvasDrawing Hook.starts and stops drawing correctly" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/components/CanvasWrapper/hooks/useCanvasDrawing.test.tsx" />
      <test-names>
        <test-name value="useCanvasDrawing Hook" />
        <test-name value="starts and stops drawing correctly" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.useCanvasDrawing Hook" />
        <item itemvalue="Jest.useCanvasDrawing Hook.starts and stops drawing correctly" />
        <item itemvalue="Jest.CanvasWrapper" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c472f434-c733-414a-870a-631c01a1ede3" name="Changes" comment="" />
      <created>1707819646535</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1707819646535</updated>
      <workItem from="1707819647678" duration="1304000" />
      <workItem from="1707821024654" duration="18406000" />
    </task>
    <task id="LOCAL-00001" summary="Create initial project skeleton">
      <created>1707820251292</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1707820251292</updated>
    </task>
    <task id="LOCAL-00002" summary="Create initial project skeleton">
      <created>1707821157491</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1707821157491</updated>
    </task>
    <task id="LOCAL-00003" summary="add test task">
      <created>1707843708842</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1707843708842</updated>
    </task>
    <task id="LOCAL-00004" summary="add unit tests for the component">
      <created>1707844431665</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1707844431665</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Create initial project skeleton" />
    <MESSAGE value="add test task" />
    <MESSAGE value="add unit tests for the component" />
    <option name="LAST_COMMIT_MESSAGE" value="add unit tests for the component" />
  </component>
</project>